The Kempner Function, applied to a composite number, permits to find the smallest integer greater than zero which factorial is exactly divided by the number.

kempner(6) - 3
1! = 1 % 6 > 0
2! = 2 % 6 > 0
3! = 6 % 6 === 0

kempner(10) - 5
1! = 1 % 10 > 0
2! = 2 % 10 > 0
3! = 6 % 10 > 0
4! = 24 % 10 > 0
5! = 120 % 10 === 0

A Kempner Function applied to a prime will always return the prime itself. Given an integer n, implement a Kempner Function.

--------------------------------------------------------

Code

def isPrime (n) :
    if n in [2, 3, 5, 7 ]:
        return True
    if n % 2 == 0 or n % 3 == 0 :
        return False
    r = 5
    while r * r <= n:
        if n % r == 0:
            return False
        r += 2
        if n % r == 0:
            return False
    return True        

def kempner(n):
    if (isPrime(n) == True):
        return n
    else:
        fact = 1
        for i in range (1,n+1):
            for j in range (1,i+1):
                fact = fact * j
            if (fact % n == 0):
                return i
            fact = 1
